@prefix : <https://pipeline.described.at/> .
@prefix code: <https://code.described.at/> .

<urn:pipeline:Main>
  a :Pipeline, :ReadableObjectMode ;
  :variables
    [
      :variable
        [
          a :Variable ;
          :name "well-known-views-dataset" ;
          :value "https://ld.stadt-zuerich.ch/catalog/SSZ/view" ;
        ] ;
    ] ;
  :steps
    [
      :stepList
        (
          <urn:step:loadViews>
          _:prepareView
          _:pointerToDataset
          _:validate
          _:checkShaclReports
          _:flatten
        )
    ] ;
.

_:prepareView
  a :Step ;
  code:implementedBy
    [
      code:link <node:barnard59-base/map.js#default> ;
      a code:EcmaScriptModule ;
    ] ;
  code:arguments
    (
      [
        a code:EcmaScriptModule ;
        code:link <file:../lib/prepareView.js#default>
      ]
    ) ;
.

_:pointerToDataset
  a :Step ;
  code:implementedBy
    [
      code:link <node:barnard59-base/map.js#default> ;
      a code:EcmaScriptModule ;
    ] ;
  code:arguments
    (
      "({ dataset }) => dataset"^^code:EcmaScript
    ) ;
.

_:validate
  a :Step ;
  code:implementedBy
    [
      code:link <node:barnard59-shacl/validate.js#shacl> ;
      a code:EcmaScriptModule ;
    ] ;
  code:arguments
    [ code:name "shape" ; code:value _:Shapes ] ,
    [
      code:name "onViolation" ;
      code:value [ a code:EcmaScriptModule ; code:link <file:../lib/shacl.js#collectShaclReports> ] ;
    ];
.

_:checkShaclReports
   a :Step ;
  code:implementedBy
    [
      code:link <file:../lib/shacl.js#failOnAnyViolations> ;
      a code:EcmaScriptModule ;
    ] ;
.

_:Shapes
  a :Pipeline, :ReadableObjectMode ;
  :steps
    [
      :stepList
        (
          [
            code:implementedBy
              [
                a code:EcmaScriptModule ;
                code:link <file:../lib/shapes.js#validationShapes> ;
              ] ;
          ]
        )
    ]
.

_:flatten
  a :Step ;
  code:implementedBy
    [
      a code:EcmaScriptModule ;
      code:link <node:barnard59-base/flatten.js#default> ;
    ] ;
.

name: Build and push Docker image

on:
  push:
    branches:
      - "**"
    tags:
      - "view-builder-app/v*.*.*"

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn install --frozen-lockfile
      - run: yarn build

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn install --frozen-lockfile
      - run: yarn test
      - name: Codecov
        uses: codecov/codecov-action@v3

  test-publishing-pipeline:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: docker-practice/actions-setup-docker@1.0.4
        with:
          docker_version: 20.10.8
      - run: yarn
      - uses: tpluscode/action-setup-lando@v0.1.4
      - run: yarn bootstrap
      - run: yarn test
        working-directory: ./packages/publish-views
      - name: logs on fail
        if: ${{ failure() }}
        run: lando logs

  Test-API:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker-practice/actions-setup-docker@1.0.4
        with:
          docker_version: 20.10.8
      - uses: tpluscode/action-setup-lando@v0.1.4
        with:
          healthcheck: http://view-builder.lndo.site/app
          timeout: 30000
      - run: yarn bootstrap
      - run: lando test-api test/api/**/*.http

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: yarn
      - run: yarn lint

  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        uses: zazuko/action-docker-meta@main
        id: docker_meta
        with:
          images: ghcr.io/zazuko/ssz-view-builder
          include-pipeline-id: true
          strip-tag-prefix: view-builder-app/

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            COMMIT=${{ github.sha }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: zazuko
          SENTRY_PROJECT: ssz-view-builder
        with:
          version_prefix: ssz-view-builder@
          ignore_empty: true
